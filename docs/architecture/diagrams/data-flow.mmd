%% Data Flow - End-to-End User Journey

sequenceDiagram
    actor User
    participant Frontend
    participant Backend
    participant PostgreSQL
    participant Redis
    participant Pods as Backend Pods (N)
    
    Note over User,Pods: 1. Create Organization
    User->>Frontend: Click "New Org"
    Frontend->>Backend: POST /api/organizations
    Backend->>PostgreSQL: INSERT INTO organizations
    PostgreSQL-->>Backend: org_id=123
    Backend-->>Frontend: { id: 123, name: "ACME" }
    Frontend-->>User: Show "ACME Corp"
    
    Note over User,Pods: 2. Create Project
    User->>Frontend: Click "New Project"
    Frontend->>Backend: POST /api/organizations/123/projects
    Backend->>PostgreSQL: INSERT INTO projects (org_id=123)
    PostgreSQL-->>Backend: project_id=456
    Backend-->>Frontend: { id: 456, name: "HR Portal" }
    Frontend-->>User: Show "HR Portal"
    
    Note over User,Pods: 3. Open Chat (Ephemeral)
    User->>Frontend: Open Chat for Project 456
    Frontend->>Backend: WS /api/chat?project_id=456
    Note over Backend: No DB write<br/>(ephemeral channel)
    Backend-->>Frontend: WS connected
    Frontend-->>User: Chat UI ready
    
    Note over User,Pods: 4. Chat Action (Canned Only)
    User->>Frontend: Click 👍 (Ready)
    Frontend->>Backend: WS message: { action: "ready" }
    Backend->>Backend: Validate action
    Note over Backend: No persistence<br/>(ephemeral fan-out)
    Backend-->>Pods: Fan-out WS to project members
    Pods-->>Frontend: WS update
    Frontend-->>User: Show "👍 Ready"
    
    Note over User,Pods: 5. Config Hot-Reload
    User->>Frontend: Update AI Threshold
    Frontend->>Backend: PUT /api/configs { threshold: 0.9 }
    Backend->>PostgreSQL: UPDATE service_configs<br/>SET value=0.9, version=5
    Backend->>Redis: PUBLISH config:ai:threshold "v5"
    PostgreSQL-->>Backend: OK
    Redis-->>Pods: Broadcast "v5"
    Pods->>PostgreSQL: SELECT value WHERE key='threshold'
    PostgreSQL-->>Pods: 0.9
    Pods->>Pods: Update in-memory config
    Note over Pods: < 100ms hot-reload
    Backend-->>Frontend: { success: true }
    Frontend-->>User: "Config updated"
